T_INLINE_COMMENT // example valid program  1 1
T_CLASS class 3 1
T_IDENTIFIER Utility 3 7
T_OPEN_CURLY { 3 15
T_INT_TYPE int 5 2
T_IDENTIFIER var1 5 6
T_OPEN_SQUARE [ 5 10
T_INTEGER 4 5 11
T_CLOSE_SQUARE ] 5 12
T_OPEN_SQUARE [ 5 13
T_INTEGER 5 5 14
T_CLOSE_SQUARE ] 5 15
T_OPEN_SQUARE [ 5 16
T_INTEGER 7 5 17
T_CLOSE_SQUARE ] 5 18
T_OPEN_SQUARE [ 5 19
T_INTEGER 8 5 20
T_CLOSE_SQUARE ] 5 21
T_OPEN_SQUARE [ 5 22
T_INTEGER 9 5 23
T_CLOSE_SQUARE ] 5 24
T_OPEN_SQUARE [ 5 25
T_INTEGER 1 5 26
T_CLOSE_SQUARE ] 5 27
T_OPEN_SQUARE [ 5 28
T_INTEGER 0 5 29
T_CLOSE_SQUARE ] 5 30
T_SEMICOLON ; 5 31
T_FLOAT_TYPE float 6 2
T_IDENTIFIER var2 6 8
T_SEMICOLON ; 6 12
T_INT_TYPE int 8 2
T_IDENTIFIER findMax 8 6
T_OPEN_PAREN ( 8 13
T_INT_TYPE int 8 14
T_IDENTIFIER array 8 18
T_OPEN_SQUARE [ 8 23
T_INTEGER 100 8 24
T_CLOSE_SQUARE ] 8 27
T_CLOSE_PAREN ) 8 28
T_OPEN_CURLY { 8 30
T_INT_TYPE int 9 3
T_IDENTIFIER maxValue 9 7
T_SEMICOLON ; 9 15
T_INT_TYPE int 10 3
T_IDENTIFIER idx 10 7
T_SEMICOLON ; 10 10
T_IDENTIFIER maxValue 11 3
T_ASSIGN = 11 12
T_IDENTIFIER array 11 14
T_OPEN_SQUARE [ 11 19
T_INTEGER 100 11 20
T_CLOSE_SQUARE ] 11 23
T_SEMICOLON ; 11 24
T_FOR for 13 3
T_OPEN_PAREN ( 13 6
T_INT_TYPE int 13 8
T_IDENTIFIER idx 13 12
T_ASSIGN = 13 16
T_INTEGER 99 13 18
T_SEMICOLON ; 13 20
T_IDENTIFIER idx 13 22
T_GREATER_THAN > 13 26
T_INTEGER 0 13 28
T_SEMICOLON ; 13 29
T_IDENTIFIER idx 13 31
T_ASSIGN = 13 35
T_IDENTIFIER idx 13 37
T_MINUS - 13 41
T_INTEGER 1 13 43
T_CLOSE_PAREN ) 13 45
T_OPEN_CURLY { 13 47
T_IF if 14 4
T_OPEN_PAREN ( 14 6
T_IDENTIFIER array 14 7
T_OPEN_SQUARE [ 14 12
T_IDENTIFIER idx 14 13
T_CLOSE_SQUARE ] 14 16
T_GREATER_THAN > 14 18
T_IDENTIFIER maxValue 14 20
T_CLOSE_PAREN ) 14 28
T_THEN then 14 30
T_OPEN_CURLY { 14 35
T_IDENTIFIER maxValue 15 5
T_ASSIGN = 15 14
T_IDENTIFIER array 15 16
T_OPEN_SQUARE [ 15 21
T_IDENTIFIER idx 15 22
T_CLOSE_SQUARE ] 15 25
T_SEMICOLON ; 15 26
T_CLOSE_CURLY } 16 4
T_ELSE else 17 4
T_OPEN_CURLY { 17 9
T_CLOSE_CURLY } 17 10
T_SEMICOLON ; 17 11
T_CLOSE_CURLY } 18 3
T_SEMICOLON ; 18 4
T_RETURN return 20 3
T_OPEN_PAREN ( 20 10
T_IDENTIFIER maxValue 20 11
T_CLOSE_PAREN ) 20 19
T_SEMICOLON ; 20 20
T_CLOSE_CURLY } 21 2
T_SEMICOLON ; 21 3
T_INT_TYPE int 23 2
T_IDENTIFIER findMin 23 6
T_OPEN_PAREN ( 23 13
T_INT_TYPE int 23 14
T_IDENTIFIER array 23 18
T_OPEN_SQUARE [ 23 23
T_INTEGER 100 23 24
T_CLOSE_SQUARE ] 23 27
T_CLOSE_PAREN ) 23 28
T_OPEN_CURLY { 23 30
T_INT_TYPE int 24 3
T_IDENTIFIER minValue 24 7
T_SEMICOLON ; 24 15
T_INT_TYPE int 25 3
T_IDENTIFIER idx 25 7
T_SEMICOLON ; 25 10
T_IDENTIFIER minValue 26 3
T_ASSIGN = 26 12
T_IDENTIFIER array 26 14
T_OPEN_SQUARE [ 26 19
T_INTEGER 100 26 20
T_CLOSE_SQUARE ] 26 23
T_SEMICOLON ; 26 24
T_FOR for 27 3
T_OPEN_PAREN ( 27 6
T_INT_TYPE int 27 8
T_IDENTIFIER idx 27 12
T_ASSIGN = 27 16
T_INTEGER 1 27 18
T_SEMICOLON ; 27 19
T_IDENTIFIER idx 27 21
T_LESS_OR_EQUAL <= 27 25
T_INTEGER 99 27 28
T_SEMICOLON ; 27 30
T_IDENTIFIER idx 27 32
T_ASSIGN = 27 36
T_OPEN_PAREN ( 27 38
T_IDENTIFIER idx 27 40
T_CLOSE_PAREN ) 27 44
T_PLUS + 27 46
T_INTEGER 1 27 48
T_CLOSE_PAREN ) 27 49
T_OPEN_CURLY { 27 51
T_IF if 28 4
T_OPEN_PAREN ( 28 6
T_IDENTIFIER array 28 7
T_OPEN_SQUARE [ 28 12
T_IDENTIFIER idx 28 13
T_CLOSE_SQUARE ] 28 16
T_LESS_THAN < 28 18
T_IDENTIFIER maxValue 28 20
T_CLOSE_PAREN ) 28 28
T_THEN then 28 30
T_OPEN_CURLY { 28 35
T_IDENTIFIER maxValue 29 5
T_ASSIGN = 29 14
T_IDENTIFIER array 29 16
T_OPEN_SQUARE [ 29 21
T_IDENTIFIER idx 29 22
T_CLOSE_SQUARE ] 29 25
T_SEMICOLON ; 29 26
T_CLOSE_CURLY } 30 4
T_ELSE else 31 4
T_OPEN_CURLY { 31 8
T_CLOSE_CURLY } 31 9
T_SEMICOLON ; 31 10
T_CLOSE_CURLY } 32 3
T_SEMICOLON ; 32 4
T_RETURN return 33 3
T_OPEN_PAREN ( 33 10
T_IDENTIFIER minValue 33 11
T_CLOSE_PAREN ) 33 19
T_SEMICOLON ; 33 20
T_CLOSE_CURLY } 34 2
T_SEMICOLON ; 34 3
T_CLOSE_CURLY } 36 1
T_SEMICOLON ; 36 2
T_PROGRAM program 38 1
T_OPEN_CURLY { 38 9
T_INT_TYPE int 40 2
T_IDENTIFIER sample 40 6
T_OPEN_SQUARE [ 40 12
T_INTEGER 100 40 13
T_CLOSE_SQUARE ] 40 16
T_SEMICOLON ; 40 17
T_INT_TYPE int 41 2
T_IDENTIFIER idx 41 6
T_SEMICOLON ; 41 9
T_INT_TYPE int 42 2
T_IDENTIFIER maxValue 42 6
T_SEMICOLON ; 42 14
T_INT_TYPE int 43 2
T_IDENTIFIER minValue 43 6
T_SEMICOLON ; 43 14
T_IDENTIFIER Utility 45 2
T_IDENTIFIER utility 45 10
T_SEMICOLON ; 45 17
T_IDENTIFIER Utility 46 2
T_IDENTIFIER arrayUtility 46 10
T_OPEN_SQUARE [ 46 22
T_INTEGER 2 46 23
T_CLOSE_SQUARE ] 46 24
T_OPEN_SQUARE [ 46 25
T_INTEGER 3 46 26
T_CLOSE_SQUARE ] 46 27
T_OPEN_SQUARE [ 46 28
T_INTEGER 6 46 29
T_CLOSE_SQUARE ] 46 30
T_OPEN_SQUARE [ 46 31
T_INTEGER 7 46 32
T_CLOSE_SQUARE ] 46 33
T_SEMICOLON ; 46 34
T_FOR for 48 2
T_OPEN_PAREN ( 48 5
T_INT_TYPE int 48 6
T_IDENTIFIER t 48 10
T_ASSIGN = 48 12
T_INTEGER 0 48 14
T_SEMICOLON ; 48 15
T_IDENTIFIER t 48 17
T_LESS_OR_EQUAL <= 48 18
T_INTEGER 100 48 20
T_SEMICOLON ; 48 24
T_IDENTIFIER t 48 26
T_ASSIGN = 48 28
T_IDENTIFIER t 48 30
T_PLUS + 48 32
T_INTEGER 1 48 34
T_CLOSE_PAREN ) 48 35
T_OPEN_CURLY { 48 37
T_GET get 49 3
T_OPEN_PAREN ( 49 6
T_IDENTIFIER sample 49 7
T_OPEN_SQUARE [ 49 13
T_IDENTIFIER t 49 14
T_CLOSE_SQUARE ] 49 15
T_CLOSE_PAREN ) 49 16
T_SEMICOLON ; 49 17
T_IDENTIFIER sample 50 3
T_OPEN_SQUARE [ 50 9
T_IDENTIFIER t 50 10
T_CLOSE_SQUARE ] 50 11
T_ASSIGN = 50 13
T_OPEN_PAREN ( 50 15
T_IDENTIFIER sample 50 16
T_OPEN_SQUARE [ 50 22
T_IDENTIFIER t 50 23
T_CLOSE_SQUARE ] 50 24
T_MULTIPLY * 50 26
T_IDENTIFIER randomize 50 28
T_OPEN_PAREN ( 50 37
T_CLOSE_PAREN ) 50 38
T_CLOSE_PAREN ) 50 39
T_SEMICOLON ; 50 40
T_CLOSE_CURLY } 51 2
T_SEMICOLON ; 51 3
T_IDENTIFIER maxValue 53 2
T_ASSIGN = 53 11
T_IDENTIFIER utility 53 13
T_DOT . 53 20
T_IDENTIFIER findMax 53 21
T_OPEN_PAREN ( 53 28
T_IDENTIFIER sample 53 29
T_CLOSE_PAREN ) 53 35
T_SEMICOLON ; 53 36
T_IDENTIFIER minValue 54 2
T_ASSIGN = 54 11
T_IDENTIFIER utility 54 13
T_DOT . 54 20
T_IDENTIFIER findMin 54 21
T_OPEN_PAREN ( 54 28
T_IDENTIFIER sample 54 29
T_CLOSE_PAREN ) 54 35
T_SEMICOLON ; 54 36
T_IDENTIFIER utility 56 2
T_DOT . 56 9
T_IDENTIFIER var1 56 11
T_OPEN_SQUARE [ 56 15
T_INTEGER 4 56 16
T_CLOSE_SQUARE ] 56 17
T_OPEN_SQUARE [ 56 18
T_INTEGER 1 56 19
T_CLOSE_SQUARE ] 56 20
T_OPEN_SQUARE [ 56 21
T_INTEGER 0 56 22
T_CLOSE_SQUARE ] 56 23
T_OPEN_SQUARE [ 56 24
T_INTEGER 0 56 25
T_CLOSE_SQUARE ] 56 26
T_OPEN_SQUARE [ 56 27
T_INTEGER 0 56 28
T_CLOSE_SQUARE ] 56 29
T_OPEN_SQUARE [ 56 30
T_INTEGER 0 56 31
T_CLOSE_SQUARE ] 56 32
T_OPEN_SQUARE [ 56 33
T_INTEGER 0 56 34
T_CLOSE_SQUARE ] 56 35
T_ASSIGN = 56 37
T_INTEGER 10 56 39
T_SEMICOLON ; 56 41
T_IDENTIFIER arrayUtility 58 2
T_OPEN_SQUARE [ 58 14
T_INTEGER 1 58 15
T_CLOSE_SQUARE ] 58 16
T_OPEN_SQUARE [ 58 17
T_INTEGER 1 58 18
T_CLOSE_SQUARE ] 58 19
T_OPEN_SQUARE [ 58 20
T_INTEGER 1 58 21
T_CLOSE_SQUARE ] 58 22
T_OPEN_SQUARE [ 58 23
T_INTEGER 1 58 24
T_CLOSE_SQUARE ] 58 25
T_DOT . 58 26
T_IDENTIFIER var1 58 27
T_OPEN_SQUARE [ 58 31
T_INTEGER 4 58 32
T_CLOSE_SQUARE ] 58 33
T_OPEN_SQUARE [ 58 34
T_INTEGER 1 58 35
T_CLOSE_SQUARE ] 58 36
T_OPEN_SQUARE [ 58 37
T_INTEGER 0 58 38
T_CLOSE_SQUARE ] 58 39
T_OPEN_SQUARE [ 58 40
T_INTEGER 0 58 41
T_CLOSE_SQUARE ] 58 42
T_OPEN_SQUARE [ 58 43
T_INTEGER 0 58 44
T_CLOSE_SQUARE ] 58 45
T_OPEN_SQUARE [ 58 46
T_INTEGER 0 58 47
T_CLOSE_SQUARE ] 58 48
T_OPEN_SQUARE [ 58 49
T_INTEGER 0 58 50
T_CLOSE_SQUARE ] 58 51
T_ASSIGN = 58 53
T_INTEGER 2 58 55
T_SEMICOLON ; 58 56
T_PUT put 60 2
T_OPEN_PAREN ( 60 5
T_IDENTIFIER maxValue 60 6
T_CLOSE_PAREN ) 60 14
T_SEMICOLON ; 60 15
T_PUT put 61 2
T_OPEN_PAREN ( 61 5
T_IDENTIFIER minValue 61 6
T_CLOSE_PAREN ) 61 14
T_SEMICOLON ; 61 15
T_CLOSE_CURLY } 62 1
T_SEMICOLON ; 62 2
T_IDENTIFIER real 64 1
T_IDENTIFIER randomize 64 6
T_OPEN_PAREN ( 64 15
T_CLOSE_PAREN ) 64 16
T_OPEN_CURLY { 64 18
T_IDENTIFIER real 66 2
T_IDENTIFIER value 66 7
T_SEMICOLON ; 66 12
T_IDENTIFIER value 67 2
T_ASSIGN = 67 8
T_INTEGER 100 67 10
T_MULTIPLY * 67 14
T_OPEN_PAREN ( 67 16
T_INTEGER 2 67 17
T_PLUS + 67 19
T_FLOAT 3.0 67 21
T_DIVIDE / 67 25
T_FLOAT 7.0006 67 27
T_CLOSE_PAREN ) 67 33
T_SEMICOLON ; 67 34
T_IDENTIFIER value 68 2
T_ASSIGN = 68 8
T_FLOAT 1.05 68 10
T_PLUS + 68 15
T_OPEN_PAREN ( 68 17
T_OPEN_PAREN ( 68 18
T_FLOAT 2.04 68 19
T_MULTIPLY * 68 24
T_FLOAT 2.47 68 26
T_CLOSE_PAREN ) 68 30
T_MINUS - 68 32
T_FLOAT 3.0 68 34
T_CLOSE_PAREN ) 68 37
T_PLUS + 68 39
T_FLOAT 7.0006 68 41
T_SEMICOLON ; 68 48
T_RETURN return 69 2
T_OPEN_PAREN ( 69 9
T_IDENTIFIER value 69 10
T_CLOSE_PAREN ) 69 15
T_SEMICOLON ; 69 16
T_CLOSE_CURLY } 70 1
T_SEMICOLON ; 70 2