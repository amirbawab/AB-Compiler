1	$ prog	T_CLASS T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		prog
2	$ prog	T_CLASS T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r60: prog->classDeclRpt progBody	=> classDeclRpt progBody
3	$ progBody classDeclRpt	T_CLASS T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r105: classDeclRpt->classDecl classDeclRpt	=> classDecl classDeclRpt progBody
4	$ progBody classDeclRpt classDecl	T_CLASS T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r59: classDecl->'T_CLASS' classIden classBody semicolon	=> 'T_CLASS' classIden classBody semicolon classDeclRpt progBody
5	$ progBody classDeclRpt semicolon classBody classIden 'T_CLASS'	T_CLASS T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
6	$ progBody classDeclRpt semicolon classBody classIden	T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		Missing class name before '{' at line 1 column 7
7	$ progBody classDeclRpt semicolon classBody	T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r25: classBody->'T_OPEN_CURLY' varDeclRptFunc closeCurly	=> 'T_CLASS' classIden 'T_OPEN_CURLY' varDeclRptFunc closeCurly semicolon classDeclRpt progBody
8	$ progBody classDeclRpt semicolon closeCurly varDeclRptFunc 'T_OPEN_CURLY'	T_OPEN_CURLY T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
9	$ progBody classDeclRpt semicolon closeCurly varDeclRptFunc	T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r63: varDeclRptFunc->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' closeCurly semicolon classDeclRpt progBody
10	$ progBody classDeclRpt semicolon closeCurly	T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r54: closeCurly->'T_CLOSE_CURLY'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon classDeclRpt progBody
11	$ progBody classDeclRpt semicolon 'T_CLOSE_CURLY'	T_CLOSE_CURLY T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
12	$ progBody classDeclRpt semicolon	T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		Missing ; before 'program' at line 5 column 1
13	$ progBody classDeclRpt	T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r106: classDeclRpt->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon progBody
14	$ progBody	T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r28: progBody->'T_PROGRAM' funcBody semicolon funcDefRpt	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' funcBody semicolon funcDefRpt
15	$ funcDefRpt semicolon funcBody 'T_PROGRAM'	T_PROGRAM T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
16	$ funcDefRpt semicolon funcBody	T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r103: funcBody->'T_OPEN_CURLY' varDeclRptSt closeCurly	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' varDeclRptSt closeCurly semicolon funcDefRpt
17	$ funcDefRpt semicolon closeCurly varDeclRptSt 'T_OPEN_CURLY'	T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
18	$ funcDefRpt semicolon closeCurly varDeclRptSt	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r84: varDeclRptSt->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' closeCurly semicolon funcDefRpt
19	$ funcDefRpt semicolon closeCurly	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r54: closeCurly->'T_CLOSE_CURLY'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon funcDefRpt
20	$ funcDefRpt semicolon 'T_CLOSE_CURLY'	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
21	$ funcDefRpt semicolon	T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r100: semicolon->'T_SEMICOLON'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' funcDefRpt
22	$ funcDefRpt 'T_SEMICOLON'	T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
23	$ funcDefRpt	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r52: funcDefRpt->type funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' type funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt
24	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden type	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r8: type->'T_INT_TYPE'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt
25	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden 'T_INT_TYPE'	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
26	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden	T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r67: funcDefIden->'T_IDENTIFIER'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' openParen fParams closeParen funcBody semicolon funcDefRpt
27	$ funcDefRpt semicolon funcBody closeParen fParams openParen 'T_IDENTIFIER'	T_IDENTIFIER T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
28	$ funcDefRpt semicolon funcBody closeParen fParams openParen	T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r24: openParen->'T_OPEN_PAREN'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' fParams closeParen funcBody semicolon funcDefRpt
29	$ funcDefRpt semicolon funcBody closeParen fParams 'T_OPEN_PAREN'	T_OPEN_PAREN T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
30	$ funcDefRpt semicolon funcBody closeParen fParams	T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r94: fParams->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' closeParen funcBody semicolon funcDefRpt
31	$ funcDefRpt semicolon funcBody closeParen	T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r5: closeParen->'T_CLOSE_PAREN'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' funcBody semicolon funcDefRpt
32	$ funcDefRpt semicolon funcBody 'T_CLOSE_PAREN'	T_CLOSE_PAREN T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
33	$ funcDefRpt semicolon funcBody	T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r103: funcBody->'T_OPEN_CURLY' varDeclRptSt closeCurly	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' 'T_OPEN_CURLY' varDeclRptSt closeCurly semicolon funcDefRpt
34	$ funcDefRpt semicolon closeCurly varDeclRptSt 'T_OPEN_CURLY'	T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
35	$ funcDefRpt semicolon closeCurly varDeclRptSt	T_CLOSE_CURLY T_SEMICOLON $ 	r84: varDeclRptSt->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' 'T_OPEN_CURLY' closeCurly semicolon funcDefRpt
36	$ funcDefRpt semicolon closeCurly	T_CLOSE_CURLY T_SEMICOLON $ 	r54: closeCurly->'T_CLOSE_CURLY'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon funcDefRpt
37	$ funcDefRpt semicolon 'T_CLOSE_CURLY'	T_CLOSE_CURLY T_SEMICOLON $ 		
38	$ funcDefRpt semicolon	T_SEMICOLON $ 	r100: semicolon->'T_SEMICOLON'	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' funcDefRpt
39	$ funcDefRpt 'T_SEMICOLON'	T_SEMICOLON $ 		
40	$ funcDefRpt	$ 	r51: funcDefRpt->EPSILON	=> 'T_CLASS' classIden 'T_OPEN_CURLY' 'T_CLOSE_CURLY' semicolon 'T_PROGRAM' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_CLOSE_PAREN' 'T_OPEN_CURLY' 'T_CLOSE_CURLY' 'T_SEMICOLON'
41	$	$ 		Failure