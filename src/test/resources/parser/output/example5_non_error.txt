1	$ prog	T_PROGRAM T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		prog
2	$ prog	T_PROGRAM T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r60: prog->classDeclRpt progBody	=> classDeclRpt progBody
3	$ progBody classDeclRpt	T_PROGRAM T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r108: classDeclRpt->EPSILON	=> progBody
4	$ progBody	T_PROGRAM T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r28: progBody->'T_PROGRAM' funcBody semicolon funcDefRpt	=> 'T_PROGRAM' funcBody semicolon funcDefRpt
5	$ funcDefRpt semicolon funcBody 'T_PROGRAM'	T_PROGRAM T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
6	$ funcDefRpt semicolon funcBody	T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r105: funcBody->'T_OPEN_CURLY' varDeclRptSt closeCurly	=> 'T_PROGRAM' 'T_OPEN_CURLY' varDeclRptSt closeCurly semicolon funcDefRpt
7	$ funcDefRpt semicolon closeCurly varDeclRptSt 'T_OPEN_CURLY'	T_OPEN_CURLY T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
8	$ funcDefRpt semicolon closeCurly varDeclRptSt	T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r85: varDeclRptSt->'T_INT_TYPE' identifier arraySizeRpt semicolon varDeclRptSt	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' identifier arraySizeRpt semicolon varDeclRptSt closeCurly semicolon funcDefRpt
9	$ funcDefRpt semicolon closeCurly varDeclRptSt semicolon arraySizeRpt identifier 'T_INT_TYPE'	T_INT_TYPE T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
10	$ funcDefRpt semicolon closeCurly varDeclRptSt semicolon arraySizeRpt identifier	T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r55: identifier->'T_IDENTIFIER'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' arraySizeRpt semicolon varDeclRptSt closeCurly semicolon funcDefRpt
11	$ funcDefRpt semicolon closeCurly varDeclRptSt semicolon arraySizeRpt 'T_IDENTIFIER'	T_IDENTIFIER T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
12	$ funcDefRpt semicolon closeCurly varDeclRptSt semicolon arraySizeRpt	T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r34: arraySizeRpt->EPSILON	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' semicolon varDeclRptSt closeCurly semicolon funcDefRpt
13	$ funcDefRpt semicolon closeCurly varDeclRptSt semicolon	T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r100: semicolon->'T_SEMICOLON'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' varDeclRptSt closeCurly semicolon funcDefRpt
14	$ funcDefRpt semicolon closeCurly varDeclRptSt 'T_SEMICOLON'	T_SEMICOLON T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
15	$ funcDefRpt semicolon closeCurly varDeclRptSt	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r84: varDeclRptSt->EPSILON	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' closeCurly semicolon funcDefRpt
16	$ funcDefRpt semicolon closeCurly	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r54: closeCurly->'T_CLOSE_CURLY'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' semicolon funcDefRpt
17	$ funcDefRpt semicolon 'T_CLOSE_CURLY'	T_CLOSE_CURLY T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
18	$ funcDefRpt semicolon	T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r100: semicolon->'T_SEMICOLON'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' funcDefRpt
19	$ funcDefRpt 'T_SEMICOLON'	T_SEMICOLON T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
20	$ funcDefRpt	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r52: funcDefRpt->type funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' type funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt
21	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden type	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r8: type->'T_INT_TYPE'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' funcDefIden openParen fParams closeParen funcBody semicolon funcDefRpt
22	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden 'T_INT_TYPE'	T_INT_TYPE T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
23	$ funcDefRpt semicolon funcBody closeParen fParams openParen funcDefIden	T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r67: funcDefIden->'T_IDENTIFIER'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' openParen fParams closeParen funcBody semicolon funcDefRpt
24	$ funcDefRpt semicolon funcBody closeParen fParams openParen 'T_IDENTIFIER'	T_IDENTIFIER T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
25	$ funcDefRpt semicolon funcBody closeParen fParams openParen	T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r24: openParen->'T_OPEN_PAREN'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' fParams closeParen funcBody semicolon funcDefRpt
26	$ funcDefRpt semicolon funcBody closeParen fParams 'T_OPEN_PAREN'	T_OPEN_PAREN T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
27	$ funcDefRpt semicolon funcBody closeParen fParams	T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r93: fParams->type fParamsIden arraySizeRpt fParamsTailRpt	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' type fParamsIden arraySizeRpt fParamsTailRpt closeParen funcBody semicolon funcDefRpt
28	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden type	T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 	r10: type->'T_IDENTIFIER'	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_IDENTIFIER' fParamsIden arraySizeRpt fParamsTailRpt closeParen funcBody semicolon funcDefRpt
29	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden 'T_IDENTIFIER'	T_IDENTIFIER T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		
30	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden	T_OPEN_CURLY T_CLOSE_CURLY T_SEMICOLON $ 		Expecting an identifier instead of '{' at line 6 column 15
31	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden	T_CLOSE_CURLY T_SEMICOLON $ 		Expecting an identifier instead of '}' at line 8 column 1
32	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden	T_SEMICOLON $ 		Expecting an identifier instead of ';' at line 8 column 2
33	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt fParamsIden	$ 		Expecting an identifier instead of 'End Of File' at line 8 column 3
34	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt arraySizeRpt	$ 		Error 'End Of File' at line 8 column 3
35	$ funcDefRpt semicolon funcBody closeParen fParamsTailRpt	$ 		Error 'End Of File' at line 8 column 3
36	$ funcDefRpt semicolon funcBody closeParen	$ 		Expecting ) before 'End Of File' at line 8 column 3
37	$ funcDefRpt semicolon funcBody	$ 		Error 'End Of File' at line 8 column 3
38	$ funcDefRpt semicolon	$ 		Missing ; before 'End Of File' at line 8 column 3
39	$ funcDefRpt	$ 	r51: funcDefRpt->EPSILON	=> 'T_PROGRAM' 'T_OPEN_CURLY' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_SEMICOLON' 'T_CLOSE_CURLY' 'T_SEMICOLON' 'T_INT_TYPE' 'T_IDENTIFIER' 'T_OPEN_PAREN' 'T_IDENTIFIER' fParamsIden arraySizeRpt fParamsTailRpt closeParen funcBody semicolon
40	$	$ 		Failure